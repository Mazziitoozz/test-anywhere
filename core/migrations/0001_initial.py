# Generated by Django 3.0.6 on 2020-07-03 11:09

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(regex='^[a-zA-Z0-9]+$')])),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_owner', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Bares',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=60, validators=[django.core.validators.RegexValidator(message='Enter a valid value', regex='^[a-zA-Z0-9 ]+$')])),
                ('ubicacion', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='Enter a valid value', regex='^[a-zA-Z0-9 ]+$')])),
                ('web', models.CharField(max_length=50, null=True)),
                ('telefono', models.PositiveIntegerField(null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid value', regex='^[0-9]+$'), django.core.validators.MaxValueValidator(999999999)])),
                ('apertura', models.TimeField(null=True)),
                ('cierre', models.TimeField(null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Categorias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoria', models.CharField(max_length=30, unique=True, validators=[django.core.validators.RegexValidator(message='Enter a valid value', regex='^[a-zA-Z ]+$')])),
            ],
        ),
        migrations.CreateModel(
            name='PlatosCategorias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plato', models.CharField(max_length=50)),
                ('descripcion', models.CharField(max_length=250, null=True)),
                ('celiaco', models.BooleanField(default=False)),
                ('vegano', models.BooleanField(default=False)),
                ('vegetariano', models.BooleanField(default=False)),
                ('bar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Bares')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Categorias')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlatosValoraciones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valoracion', models.PositiveIntegerField(validators=[django.core.validators.RegexValidator(message='Enter a valid value', regex='^[1-5]+$'), django.core.validators.MaxValueValidator(5)])),
                ('plato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.PlatosCategorias')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MenuIncluye',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menuPrecio', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('bebida', models.BooleanField(default=True)),
                ('pan', models.BooleanField(default=True)),
                ('postreIncluido', models.BooleanField(default=True)),
                ('cafe', models.BooleanField(default=False)),
                ('bar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Bares')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MenuBar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plato', models.CharField(max_length=50)),
                ('primero', models.BooleanField(default=True)),
                ('segundo', models.BooleanField(default=False)),
                ('postre', models.BooleanField(default=False)),
                ('dia', models.DateField(auto_now=True)),
                ('bar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Bares')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
